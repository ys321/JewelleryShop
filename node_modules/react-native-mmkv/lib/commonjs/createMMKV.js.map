{"version":3,"sources":["createMMKV.ts"],"names":["ROOT_DIRECTORY","createMMKV","config","global","mmkvCreateNewInstance","MMKVModule","NativeModules","MMKV","message","Platform","OS","ExpoConstants","NativeUnimoduleProxy","modulesConstants","ExponentConstants","appOwnership","Error","nativeCallSyncHook","install","result"],"mappings":";;;;;;;AAAA;;AASA;AACA,MAAMA,cAA6B,GAAG,IAAtC;;AAEO,MAAMC,UAAU,GAAIC,MAAD,IAA2C;AACnE;AACA,MAAIC,MAAM,CAACC,qBAAP,IAAgC,IAApC,EAA0C;AACxC;AACA,UAAMC,UAAU,GAAGC,2BAAcC,IAAjC;;AACA,QAAIF,UAAU,IAAI,IAAlB,EAAwB;AAAA;;AACtB,UAAIG,OAAO,GACT,kFADF;AAEAA,MAAAA,OAAO,IACL,mGADF;;AAEA,UAAIC,sBAASC,EAAT,KAAgB,KAAhB,IAAyBD,sBAASC,EAAT,KAAgB,OAA7C,EAAsD;AACpDF,QAAAA,OAAO,IAAI,4DAAX;AACD;;AACD,UAAIC,sBAASC,EAAT,KAAgB,SAApB,EAA+B;AAC7BF,QAAAA,OAAO,IAAI,iCAAX;AACD,OAVqB,CAWtB;;;AACA,YAAMG,aAAa,4BACjBL,2BAAcM,oBADG,oFACjB,sBAAoCC,gBADnB,2DACjB,uBAAsDC,iBADxD;;AAEA,UAAIH,aAAa,IAAI,IAArB,EAA2B;AACzB,YAAIA,aAAa,CAACI,YAAd,KAA+B,MAAnC,EAA2C;AACzC;AACA,gBAAM,IAAIC,KAAJ,CACJ,+GADI,CAAN;AAGD,SALD,MAKO;AACL;AACAR,UAAAA,OAAO,IAAI,wCAAX;AACD;AACF;;AAEDA,MAAAA,OAAO,IAAI,oCAAX;AACA,YAAM,IAAIQ,KAAJ,CAAUR,OAAV,CAAN;AACD,KA/BuC,CAiCxC;;;AACA,QAAIL,MAAM,CAACc,kBAAP,IAA6B,IAA7B,IAAqCZ,UAAU,CAACa,OAAX,IAAsB,IAA/D,EAAqE;AACnE,YAAM,IAAIF,KAAJ,CACJ,sQADI,CAAN;AAGD,KAtCuC,CAwCxC;;;AACA,UAAMG,MAAM,GAAGd,UAAU,CAACa,OAAX,CAAmBlB,cAAnB,CAAf;AACA,QAAImB,MAAM,KAAK,IAAf,EACE,MAAM,IAAIH,KAAJ,CACH,sJAAqJG,MAAO,EADzJ,CAAN,CA3CsC,CA+CxC;;AACA,QAAIhB,MAAM,CAACC,qBAAP,IAAgC,IAApC,EACE,MAAM,IAAIY,KAAJ,CACJ,8IADI,CAAN;AAGH;;AAED,SAAOb,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAP;AACD,CAzDM","sourcesContent":["import { NativeModules, Platform } from 'react-native';\nimport type { MMKVConfiguration, NativeMMKV } from 'react-native-mmkv';\n\n// global func declaration for JSI functions\ndeclare global {\n  function mmkvCreateNewInstance(configuration: MMKVConfiguration): NativeMMKV;\n  function nativeCallSyncHook(): unknown;\n}\n\n// Root directory of all MMKV stores\nconst ROOT_DIRECTORY: string | null = null;\n\nexport const createMMKV = (config: MMKVConfiguration): NativeMMKV => {\n  // Check if the constructor exists. If not, try installing the JSI bindings.\n  if (global.mmkvCreateNewInstance == null) {\n    // Get the native MMKV ReactModule\n    const MMKVModule = NativeModules.MMKV;\n    if (MMKVModule == null) {\n      let message =\n        'Failed to create a new MMKV instance: The native MMKV Module could not be found.';\n      message +=\n        '\\n* Make sure react-native-mmkv is correctly autolinked (run `npx react-native config` to verify)';\n      if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n        message += '\\n* Make sure you ran `pod install` in the ios/ directory.';\n      }\n      if (Platform.OS === 'android') {\n        message += '\\n* Make sure gradle is synced.';\n      }\n      // check if Expo\n      const ExpoConstants =\n        NativeModules.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants;\n      if (ExpoConstants != null) {\n        if (ExpoConstants.appOwnership === 'expo') {\n          // We're running Expo Go\n          throw new Error(\n            'react-native-mmkv is not supported in Expo Go! Use EAS (`expo prebuild`) or eject to a bare workflow instead.'\n          );\n        } else {\n          // We're running Expo bare / standalone\n          message += '\\n* Make sure you ran `expo prebuild`.';\n        }\n      }\n\n      message += '\\n* Make sure you rebuilt the app.';\n      throw new Error(message);\n    }\n\n    // Check if we are running on-device (JSI)\n    if (global.nativeCallSyncHook == null || MMKVModule.install == null) {\n      throw new Error(\n        'Failed to create a new MMKV instance: React Native is not running on-device. MMKV can only be used when synchronous method invocations (JSI) are possible. If you are using a remote debugger (e.g. Chrome), switch to an on-device debugger (e.g. Flipper) instead.'\n      );\n    }\n\n    // Call the synchronous blocking install() function\n    const result = MMKVModule.install(ROOT_DIRECTORY);\n    if (result !== true)\n      throw new Error(\n        `Failed to create a new MMKV instance: The native MMKV Module could not be installed! Looks like something went wrong when installing JSI bindings: ${result}`\n      );\n\n    // Check again if the constructor now exists. If not, throw an error.\n    if (global.mmkvCreateNewInstance == null)\n      throw new Error(\n        'Failed to create a new MMKV instance, the native initializer function does not exist. Are you trying to use MMKV from different JS Runtimes?'\n      );\n  }\n\n  return global.mmkvCreateNewInstance(config);\n};\n"]}