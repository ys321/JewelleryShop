{"version":3,"sources":["createMMKV.mock.ts"],"names":["createMockMMKV","storage","Map","clearAll","clear","delete","key","set","value","getString","result","get","undefined","getNumber","getBoolean","getAllKeys","Array","from","keys","contains","has","recrypt","console","warn"],"mappings":"AAEA;AACA,OAAO,MAAMA,cAAc,GAAG,MAAkB;AAC9C,QAAMC,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,MAAMF,OAAO,CAACG,KAAR,EADX;AAELC,IAAAA,MAAM,EAAGC,GAAD,IAASL,OAAO,CAACI,MAAR,CAAeC,GAAf,CAFZ;AAGLC,IAAAA,GAAG,EAAE,CAACD,GAAD,EAAME,KAAN,KAAgBP,OAAO,CAACM,GAAR,CAAYD,GAAZ,EAAiBE,KAAjB,CAHhB;AAILC,IAAAA,SAAS,EAAGH,GAAD,IAAS;AAClB,YAAMI,MAAM,GAAGT,OAAO,CAACU,GAAR,CAAYL,GAAZ,CAAf;AACA,aAAO,OAAOI,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCE,SAA7C;AACD,KAPI;AAQLC,IAAAA,SAAS,EAAGP,GAAD,IAAS;AAClB,YAAMI,MAAM,GAAGT,OAAO,CAACU,GAAR,CAAYL,GAAZ,CAAf;AACA,aAAO,OAAOI,MAAP,KAAkB,QAAlB,GAA6BA,MAA7B,GAAsCE,SAA7C;AACD,KAXI;AAYLE,IAAAA,UAAU,EAAGR,GAAD,IAAS;AACnB,YAAMI,MAAM,GAAGT,OAAO,CAACU,GAAR,CAAYL,GAAZ,CAAf;AACA,aAAO,OAAOI,MAAP,KAAkB,SAAlB,GAA8BA,MAA9B,GAAuCE,SAA9C;AACD,KAfI;AAgBLG,IAAAA,UAAU,EAAE,MAAMC,KAAK,CAACC,IAAN,CAAWhB,OAAO,CAACiB,IAAR,EAAX,CAhBb;AAiBLC,IAAAA,QAAQ,EAAGb,GAAD,IAASL,OAAO,CAACmB,GAAR,CAAYd,GAAZ,CAjBd;AAkBLe,IAAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,OAAO,CAACC,IAAR,CAAa,uDAAb;AACD;AApBI,GAAP;AAsBD,CAzBM","sourcesContent":["import type { NativeMMKV } from 'react-native-mmkv';\n\n/* Mock MMKV instance for use in tests */\nexport const createMockMMKV = (): NativeMMKV => {\n  const storage = new Map<string, string | boolean | number>();\n\n  return {\n    clearAll: () => storage.clear(),\n    delete: (key) => storage.delete(key),\n    set: (key, value) => storage.set(key, value),\n    getString: (key) => {\n      const result = storage.get(key);\n      return typeof result === 'string' ? result : undefined;\n    },\n    getNumber: (key) => {\n      const result = storage.get(key);\n      return typeof result === 'number' ? result : undefined;\n    },\n    getBoolean: (key) => {\n      const result = storage.get(key);\n      return typeof result === 'boolean' ? result : undefined;\n    },\n    getAllKeys: () => Array.from(storage.keys()),\n    contains: (key) => storage.has(key),\n    recrypt: () => {\n      console.warn('Encryption is not supported in mocked MMKV instances!');\n    },\n  };\n};\n"]}