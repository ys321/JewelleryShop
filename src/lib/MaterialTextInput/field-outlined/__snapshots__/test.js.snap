// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.38)",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 1,
              },
              Object {
                "translateY": 20,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, 0.38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .87)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="undefined"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;

exports[`renders accessory 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.38)",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <Image />
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 1,
              },
              Object {
                "translateY": 20,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, 0.38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .87)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="undefined"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;

exports[`renders counter 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 8,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.38)",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.75,
              },
              Object {
                "translateY": -10,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, 0.38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .87)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="text"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  >
    <Text
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
            "fontSize": 12,
            "lineHeight": 16,
            "marginLeft": 8,
            "paddingVertical": 2,
            "textAlign": "right",
          },
          undefined,
          Object {
            "color": "rgba(0, 0, 0, .38)",
          },
        ]
      }
    >
      4
       / 
      10
    </Text>
  </View>
</View>
`;

exports[`renders disabled value 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="none"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 8,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, .38)",
              "borderRadius": 4,
              "borderWidth": 0.5,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, .38)",
            "borderRadius": 4,
            "borderWidth": 0.5,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, .38)",
            "borderRadius": 4,
            "borderWidth": 0.5,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, .38)",
            "borderRadius": 4,
            "borderWidth": 0.5,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.75,
              },
              Object {
                "translateY": -10,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, .38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={false}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .38)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="text"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;

exports[`renders title 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 0,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.38)",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 1,
              },
              Object {
                "translateY": 20,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, 0.38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .87)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="undefined"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;

exports[`renders value 1`] = `
<View
  onResponderRelease={[Function]}
  onStartShouldSetResponder={[Function]}
  pointerEvents="auto"
>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "flex-end",
        "flexDirection": "row",
        "height": 56,
        "paddingBottom": 16,
        "paddingLeft": 12,
        "paddingRight": 12,
        "paddingTop": 0,
      }
    }
  >
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
          },
          Object {
            "left": 8,
            "right": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
            "transform": Array [
              Object {
                "scaleX": 1,
              },
              Object {
                "translateX": 8,
              },
            ],
          }
        }
      >
        <View
          collapsable={false}
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.38)",
              "borderRadius": 4,
              "borderStyle": "solid",
              "borderWidth": 1,
              "bottom": -4,
              "left": -4,
              "position": "absolute",
              "right": -4,
              "top": 0,
            }
          }
        />
      </View>
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "overflow": "hidden",
            "position": "absolute",
            "right": 0,
            "top": 0,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": -4,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "right": 0,
          "top": 4,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": 0.5,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": -4,
          }
        }
      />
    </View>
    <View
      pointerEvents="none"
      style={
        Array [
          Object {
            "height": 4,
            "left": 0,
            "overflow": "hidden",
            "position": "absolute",
            "top": 0,
            "width": 4,
          },
          Object {
            "width": 8,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "borderColor": "rgba(0, 0, 0, 0.38)",
            "borderRadius": 4,
            "borderStyle": "solid",
            "borderWidth": 1,
            "bottom": -4,
            "left": 0,
            "position": "absolute",
            "right": -4,
            "top": 0,
          }
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "left": "-100%",
            "paddingLeft": "50%",
            "position": "absolute",
            "top": 0,
            "transform": Array [
              Object {
                "scale": 0.75,
              },
              Object {
                "translateY": -10,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": "200%",
          }
        }
      >
        <Text
          collapsable={false}
          numberOfLines={1}
          onTextLayout={[Function]}
          style={
            Object {
              "color": "rgba(0, 0, 0, 0.38)",
              "fontSize": 16,
              "includeFontPadding": false,
              "lineHeight": 16,
              "textAlign": "left",
              "textAlignVertical": "top",
            }
          }
        >
          test
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "flex-end",
            "flex": 1,
            "flexDirection": "row",
          }
        }
      >
        <View
          style={
            Object {
              "flexDirection": "row",
            }
          }
        >
          <View
            style={Object {}}
          />
          <TextInput
            autoCapitalize="sentences"
            disableFullscreenUI={true}
            editable={true}
            onBlur={[Function]}
            onChange={[Function]}
            onChangeText={[Function]}
            onContentSizeChange={[Function]}
            onFocus={[Function]}
            selectionColor="rgb(0, 145, 234)"
            style={
              Array [
                Object {
                  "flex": 1,
                  "includeFontPadding": false,
                  "margin": 0,
                  "padding": 0,
                  "paddingTop": 0,
                  "textAlign": "left",
                  "textAlignVertical": "top",
                  "top": 2,
                },
                Object {
                  "color": "rgba(0, 0, 0, .87)",
                  "fontSize": 16,
                  "height": 24,
                },
                undefined,
              ]
            }
            underlineColorAndroid="transparent"
            value="text"
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "flex-start",
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
        Object {
          "minHeight": 8,
          "paddingLeft": 12,
          "paddingRight": 12,
        },
        undefined,
        undefined,
      ]
    }
  />
</View>
`;
